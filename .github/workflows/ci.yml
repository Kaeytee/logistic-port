# Professional CI workflow for Node.js/TypeScript/React monorepo
# Runs on PRs and pushes to main. Ensures code quality, lint, typecheck, build, and test coverage.

name: CI (Professional)
description: >
  Runs lint, typecheck, build, and tests for all packages. Fails fast and caches dependencies for speed.

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      # Get the pnpm cache directory and write it to the environment file (GITHUB_ENV)
      - name: Get pnpm cache directory
        id: pnpm-cache
        run: |
          PNPM_CACHE_DIR=$(pnpm store path)
          if [ -z "$PNPM_CACHE_DIR" ]; then
            echo "PNPM cache directory not found. Please ensure pnpm is installed and configured correctly."
            exit 1
          fi
          echo "PNPM_CACHE_DIR=$PNPM_CACHE_DIR" >> $GITHUB_ENV
      # Cache pnpm modules using the directory from the environment variable
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_CACHE_DIR }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run linter
        run: pnpm run lint

  typecheck:
    name: TypeScript Typecheck
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run typecheck
        run: pnpm run typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [install, lint, typecheck]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build project
        run: pnpm run build

  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    needs: [install, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run tests with coverage
        run: pnpm run test -- --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/*.json
          flags: unittests
          name: codecov-umbrella

# Documentation:
# - This workflow ensures all PRs and pushes to main are production-ready.
# - Add secret CODECOV_TOKEN for coverage reporting.
# - Adjust scripts in package.json as needed for your repo.